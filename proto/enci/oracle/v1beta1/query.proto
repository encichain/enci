syntax = "proto3";
package enci.oracle.v1beta1;

import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "google/api/annotations.proto";
import "enci/oracle/v1beta1/params.proto";
import "enci/oracle/v1beta1/oracle.proto";
import "enci/oracle/v1beta1/genesis.proto";
import "cosmos_proto/cosmos.proto";

// this line is used by starport scaffolding # 1

option go_package = "github.com/encichain/enci/x/oracle/types";

// Query defines the gRPC querier service.
service Query {
  // Params queries the parameters of othe racle module
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/enci/oracle/v1beta1/params";
  }

  // VoteRounds queries the active VoteRounds for all claim types
  rpc VoteRounds(QueryVoteRoundsRequest) returns (QueryVoteRoundsResponse) {
    option (google.api.http).get = "/enci/oracle/v1beta1/voterounds";
  }

  // PrevoteRounds queries the active PrevoteRounds for all claim types
  rpc PrevoteRounds(QueryPrevoteRoundsRequest) returns (QueryPrevoteRoundsResponse) {
    option (google.api.http).get = "/enci/oracle/v1beta1/prevoterounds";
  }

  // VoterDelegations queries all the voter delegations
  rpc VoterDelegations(QueryVoterDelegationsRequest) returns (QueryVoterDelegationsResponse) {
    option (google.api.http).get = "/enci/oracle/v1beta1/voter_delegations";
  }

  // DelegateAddress queries a delegate address attached to a validator
  rpc DelegateAddress(QueryDelegateAddressRequest) returns (QueryDelegateAddressResponse) {
    option (google.api.http).get = "/enci/oracle/v1beta1/delegate/{validator}";
  }

  // ValidatorAddress queries a validator address attached to a vote delegate
  rpc DelegatorAddress(QueryDelegatorAddressRequest) returns (QueryDelegatorAddressResponse) {
    option (google.api.http).get = "/enci/oracle/v1beta1/delegator/{delegate}";
  }

  // NextVotePeriod queries the block height of the next vote period
  rpc NextVotePeriod(QueryNextVotePeriodRequest) returns (QueryNextVotePeriodResponse) {
    option (google.api.http).get = "/enci/oracle/v1beta1/next_vote_period";
  }

  // NextPrevote queries the block height of the next prevote period
  rpc NextPrevote(QueryNextPrevoteRequest) returns (QueryNextPrevoteResponse) {
    option (google.api.http).get = "/enci/oracle/v1beta1/next_prevote";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method
message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryRoundResponse is the request type for the Query/Params RPC method
message QueryVoteRoundsRequest {
}

// QueryRoundResponse is the response type for the Query/Params RPC method
message QueryVoteRoundsResponse {
  repeated VoteRound vote_rounds = 1 [(gogoproto.nullable) = false];
}

// QueryPrevoteRoundsRequest is the request type for the Query PrevoteRounds RPC method
message QueryPrevoteRoundsRequest {
}
// QueryPrevoteRoundsResponse is the response type for the Query PrevoteRoudns RPC method
message QueryPrevoteRoundsResponse {
  repeated PrevoteRound prevote_rounds = 1 [(gogoproto.nullable) = false];
}

// QueryVoterDelegationsRequest is the request type for the Query VoterDelegations RPC method
message QueryVoterDelegationsRequest {
}
// QueryVoterDelegationsResponse is the response type for the query VoterDelegations RPC method
message QueryVoterDelegationsResponse {
  repeated VoterDelegation voter_delegations = 1 [(gogoproto.nullable) = false];
}

// QueryDelegatorAddressRequest is the request type for the Query Delegator Address RPC method
message QueryDelegatorAddressRequest {
  string delegate = 1;
}
// QueryDelegatorAddressRequest is the response type for the Query Delegator Address RPC method
message QueryDelegatorAddressResponse {
  string validator = 1;
}

// QueryDelegateAddressRequest is the request type for the Query DelegateAddress RPC method
message QueryDelegateAddressRequest {
  string validator = 1;
}
// QueryDelegateAddressRequest is the response type for the Query DelegateAddress RPC method
message QueryDelegateAddressResponse {
  string delegate = 2;
}

// QueryNextVotePeriodRequest is the request type for the Query NextVotePeriod RPC method
message QueryNextVotePeriodRequest {
}
// QueryNextVotePeriodRequest is the response type for the Query NextVotePeriod RPC method
message QueryNextVotePeriodResponse {
  uint64 block = 1;
}

// QueryNextPrevoteRequest is the request type for the Query NextPrevote RPC method
message QueryNextPrevoteRequest {
}
// QueryNextPrevoteRequest is the response type for the Query NextPrevote RPC method
message QueryNextPrevoteResponse {
  uint64 block = 1;
}

