syntax = "proto3";
package user.charity.charity;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/user/charity/x/charity/types";

// Query defines the gRPC querier service.
service Query {
    // this line is used by starport scaffolding # 2

    // TaxRate return the set tax rate
    rpc TaxRate(QueryTaxRateRequest) returns (QueryTaxRateResponse) {
        option (google.api.http).get = "/user/charity/charity/TaxRate";
  }
}

// this line is used by starport scaffolding # 3

// QueryTaxRateRequest is the request type for the Query TaxRate RPC method
message QueryTaxRateRequest {}

// QueryTaxRateResponse is the response type for the Query TaxRate RPC method
message QueryTaxRateResponse {
    string tax_rate = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
}