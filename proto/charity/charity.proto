syntax = "proto3";
package user.encichain.charity;

option go_package = "github.com/user/encichain/x/charity/types";

import "gogoproto/gogo.proto";

// Charity defines the charity object
message Charity {
    string charity_name = 1; // Name of the charity
    string accAddress = 2; // Account address for the charity in the form of bech32 string
    string checksum = 3; // SHA-256 checksum of the charity_name + accAddress
}


// Params defines parameters of the charity module able to be changed by governance proposals
message Params {
    Charity charity = 1 [(gogoproto.nullable) = false]; // Set the target charity
    
    string tax_rate = 2 [               
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", 
        (gogoproto.nullable) = false
    ];
    // Tax cap represents max tax amount
    string tax_cap = 3 [                
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", 
        (gogoproto.nullable) = false
    ];  

}
// TaxRateLimits defines upper and lower limits to the tax_rate
message TaxRateLimits {
    string rate_min = 1 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable)   = false
    ];
    string rate_max = 2 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable)   = false
    ];

}

// CollectionPeriod defines the record of each tax collection period
message CollectionPeriod {
    uint64 period = 1;
    // Tax collected during entire period
    string tax_collected = 2 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
        (gogoproto.nullable) = false
    ];  
    Charity target_charity = 3 [(gogoproto.nullable) = false]; // Target charity during duration of tax collection period
    // Amount paid out to target charity
    string payout_amount = 4 [
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
        (gogoproto.nullable) = false
    ];
}